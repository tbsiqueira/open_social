<?php

/**
 * @file
 * Contains Social Flexible Group Book functions.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\group\Entity\GroupInterface;

/**
 * Implements hook_entity_form_display_alter().
 */
function social_flexible_group_book_entity_form_display_alter(EntityFormDisplayInterface $form_display, array $context): void {
  if ($context['entity_type'] !== 'node' && $context['bundle'] !== 'book' && $form_display->getMode() === 'default') {
    return;
  }

  // Add "groups" field to the form.
  /* @see \Drupal\social_group\SocialGroupSelectorWidgetConfigOverride::loadOverrides */
  $form_display->setComponent('groups', [
    'type' => 'social_group_selector_widget',
    'weight' => 0,
    'region' => 'content',
    'third_party_settings' => [],
    'settings' => [
      'width' => '100%',
      'match_operator' => 'CONTAINS',
      'match_limit' => '10',
      'autocomplete' => FALSE,
    ],
  ]);

}

/**
 * Implements hook_form_FORM_ID_alter() for "node_form".
 */
function social_flexible_group_book_form_node_form_alter(array &$form, FormStateInterface $form_state): void {
  /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_object->getEntity();

  if ($node->bundle() !== 'book') {
    return;
  }

  if (!empty($form['#fieldgroups']['group_visibility'])) {
    $form['#fieldgroups']['group_visibility']->children[] = 'groups';
    $form['#group_children']['groups'] = 'group_visibility';
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function social_flexible_group_book_menu_local_tasks_alter(array &$data, string $route_name): void {
  if (empty($data['tabs'][0]['social_flexible_group_book.books'])) {
    return;
  }

  /** @var \Drupal\group\Entity\GroupInterface $group */
  $group = _social_group_get_current_group();
  if (!$group instanceof GroupInterface) {
    return;
  }

  if ($group->bundle() === 'flexible_group') {
    return;
  }

  $data['tabs'][0]['social_flexible_group_book.books']['#access'] = AccessResult::forbidden();
}

/**
 * Implements hook_block_access().
 */
function social_flexible_group_book_block_access(Block $block, string $operation, AccountInterface $account): AccessResultInterface {
  if ($operation !== 'view') {
    return AccessResult::neutral();
  }

  if (
    in_array($block->getPluginId(), ['group_hero_block', 'group_statistic_block'])
    || $block->id() === 'socialblue_pagetitleblock_content'
  ) {
    // @todo This should be added to the block configuration from here.
    $request_path = $block->getVisibility()['request_path'];
    $request_path['pages'] .= "\r\n/group/*/books";
    $block->setVisibilityConfig('request_path', $request_path);
  }

  return AccessResult::neutral();
}
